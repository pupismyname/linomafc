@import (inline) 'node_modules/normalize.css/normalize.css';

// variables

// originally from https://purecss.io/grids/#pure-responsive-grids
@breakpoint-sm: 35.5em; //  568px
@breakpoint-md: 48em;   //  768px
@breakpoint-lg: 64em;   // 1024px
@breakpoint-xl: 80em;   // 1280px
@breakpoint-xxl: 120em; // 1920px
// only use @mq-xs for special cases
@mq-xs: ~"screen and (max-width: @{breakpoint-sm})";
@mq-sm: ~"screen and (min-width: @{breakpoint-sm})";
@mq-md: ~"screen and (min-width: @{breakpoint-md})";
@mq-lg: ~"screen and (min-width: @{breakpoint-lg})";
@mq-xl: ~"screen and (min-width: @{breakpoint-xl})";
@mq-xxl: ~"screen and (min-width: @{breakpoint-xxl})";

@retina: ~"(-webkit-min-device-pixel-ratio: 1.25) and (min-resolution: 120dpi)";

@white: #fff;
@gray: #ddd;
@black: #333;
@color: #b80619;
@lighter: saturate(tint(@color, 25%), 25%);
@darker: shade(@lighter, 10%);

@slashes: repeating-linear-gradient(45deg, @lighter, @lighter 2rem, @darker 2rem, @darker 4rem);

@site-width: 84rem;

// end variables

// fonts

// don't use font subset for cloister black because full font is only slightly bigger
@font-face {
  font-family: CloisterBlack;
  src: url(/fonts/CloisterBlack-hint-all.woff2) format("woff2");
  font-weight: 700;
  font-display: swap;
}

// subset of Ubuntu Regular
@font-face {
  font-family: Ubuntu;
  src: url(/fonts/Ubuntu-Regular-kern-latin.woff2) format("woff2");
  font-weight: 400;
  font-display: swap;
}

// subset of Ubuntu Regular
@font-face {
  font-family: Ubuntu;
  src: url(/fonts/Ubuntu-Bold-kern-latin.woff2) format("woff2");
  font-weight: 700;
  font-display: swap;
}

// end fonts

// setup

:root {
  --basefont: 8px;
  @media @mq-md { --basefont: 10px; }
  @media @mq-lg { --basefont: 12px; }
  // @media @mq-xl { --basefont: 14px; }
  font-size: var(--basefont);
  box-sizing: border-box;
}

// end setup

// layout

body {
  font-family: Ubuntu, sans-serif;
  line-height: 1.6;
  background: @slashes;
  color: @black;
  margin: 0;
  padding: 0;
}

.site {
  @media @mq-xl {
    max-width: @site-width;
  }
  margin: 0 auto;
  background: @white;
  padding: 1rem 2rem;
  min-height: 120vh;
  border-width: 0 2rem;
  @media @mq-sm {
    border-width: 0 4rem;
  }
  border-color: transparent;
  border-style: solid;
  background-clip: padding-box;
  font-size: 1.4rem;
}

main {
  margin-top: 1rem;
}

.columns {
  @media @mq-sm {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;
  }
}

.column {
  @media @mq-sm {
    flex: 1;
    min-width: 21rem;
  }
  :where(main) & {
    border-top: 0.5rem solid @gray;
    &:first-child {
      border-top: none;
    }
    @media @mq-sm {
      border-top: none;
    }
  }
}

.item {
  padding: 2rem 0;
}

// end layout

// general styles

a {
  color: @darker;
  &:hover, &:focus {
    color: @lighter;
  }
  :where(h2) & {
    text-decoration: none;
    &:hover, &:focus {
      text-decoration: underline;
    }
  }
}

// scale images but don't make them look weird
// from https://css-tricks.com/barebones-css-for-fluid-images/
img {
  max-width: 100%;
}
img[width] {
  width: auto; /* Defer to max-width */
}
img[width][height] {
  height: auto; /* Preserve aspect ratio */
}
/* Let SVG scale without boundaries */
img[src$=".svg"] {
  width: 100%;
  height: auto;
  max-width: none;
}
// end css tricks image scaling styles

h1 {
  font-family: CloisterBlack, serif;
  font-weight: 700;
  margin: 1rem 0;
}

figure {
  margin: 0;
  padding: 0;
}

blockquote {
  margin: 1rem 0;
  padding: 0;
}

h2 {
  color: @darker;
  line-height: 1.2;
}

h2, h3 {
  margin: 0.5em 0;
}

hr {
  background: @black;
  border-width: 0;
  height: 0.5rem;
}

.button {
  display: inline-block;
  background: @slashes;
  border-radius: 5em;
  color: @white;
  text-decoration: none;
  font-weight: 700;
  padding: 0.7rem 1.4rem;
  margin: 0 0.2rem 0.2em 0;
  &:hover, &:focus {
    background: @lighter;
    color: @white;
  }
}

// lockup

.lockup {
  @media @mq-sm {
    align-items: center;
  }
  font-size: 1.8rem;
  padding: 3rem 0;
}

.lockup-piece {
  text-align: center;
  border-bottom: none;
}

.lockup-title {
  @media @mq-sm {
    flex: 1.3;
    width: 60%;
    order: 2;
    text-align: left;
  }
}

.lockup-image {
  display: inline-block;
  max-width: 100%;
  max-height: 30rem;
  object-fit: scale-down;
}

.lockup-header {
  font-size: 6rem;
}

// end lockup

// footer

.footer-column {
  font-size: 1.2rem;
}

// end footer

// sponsors

.sponsor-list {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.sponsor-link {
  display: block;
  width: 100%;
}

.sponsor-img {
  max-width: 20rem;
  max-height: 5em;
  border: 1px solid transparent;
  padding: 1rem;
  margin-left: ~"calc(-1rem - 1px)";
}

:where(a:hover) .sponsor-img {
  border: 1px solid @lighter;
}

// end sponsors

// utilities

.u-align-center {
  text-align: center;
}

.u-align-left {
  text-align: left;
}

.u-align-right {
  text-align: right;
}

// create media-query conditional alignments like .u-md-align-center or .u-xl-align-right
@sizes: sm, md, lg, xl, xxl;
.make-u-align-classes(@alignment, @i: length(@sizes), @sizes: @sizes) when (@i > 0) {
  .make-u-align-classes(@alignment, @i - 1);
  @size: extract(@sizes, @i);
  @mq: "mq-@{size}";
  @media @@mq {
    .u-@{size}-align-@{alignment} {
      text-align: @alignment;
    }
  }
}
.make-u-align-classes(left);
.make-u-align-classes(right);
.make-u-align-classes(center);

// discourage linebreaks if possible
// example:
// <span class="u-avoid-break">break after</span> <span class="u-avoid-break">break before</span>
//        word wrap is encouraged to happen here ^
.u-avoid-break {
  display: inline-block;
}

// end utilities
